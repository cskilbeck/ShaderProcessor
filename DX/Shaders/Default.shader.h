//////////////////////////////////////////////////////////////////////
// Default.h - auto generated file, do not edit

#pragma once
#pragma pack(push, 4)

namespace Shaders
{
	using namespace DX;

	// D3D11_DEPTH_STENCIL_DESC
	uint32 WEAKSYM Default_DepthStencilDesc[] = 
	{
		0x00000001,0x00000001,0x00000002,0x00000000,0x0000ffff,0x00000001,0x00000001,0x00000001,
		0x00000008,0x00000001,0x00000001,0x00000001,0x00000008
	};

	// D3D11_RASTERIZER_DESC
	uint32 WEAKSYM Default_RasterizerDesc[] = 
	{
		0x00000003,0x00000003,0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,
		0x00000000,0x00000000
	};

	// D3D11_BLEND_DESC
	uint32 WEAKSYM Default_BlendDesc[] = 
	{
		0x00000000,0x00000000,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f,0x00000000,0x00000002,0x00000001,0x00000001,0x00000002,0x00000001,
		0x00000001,0xcccccc0f
	};

	//////////////////////////////////////////////////////////////////////
	// Data for Default_VS

	uint32 WEAKSYM Default_VS_Data[] =
	{
		0x43425844,0x116eed19,0x4d6a522f,0x8130ee38,0x85048669,0x00000001,0x00000528,0x00000005,
		0x00000034,0x00000130,0x000001d8,0x00000260,0x000004ac,0x46454452,0x000000f4,0x00000001,
		0x0000004c,0x00000001,0x0000001c,0xfffe0400,0x00008100,0x000000c0,0x0000003c,0x00000000,
		0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x74726556,0x736e6f43,
		0x746e6174,0xabab0073,0x0000003c,0x00000002,0x00000064,0x00000080,0x00000000,0x00000000,
		0x00000094,0x00000000,0x00000040,0x00000002,0x000000a0,0x00000000,0x000000b0,0x00000040,
		0x00000040,0x00000002,0x000000a0,0x00000000,0x65646f4d,0x74614d6c,0x00786972,0x00030003,
		0x00040004,0x00000000,0x00000000,0x6e617254,0x726f6673,0x74614d6d,0x00786972,0x7263694d,
		0x666f736f,0x52282074,0x4c482029,0x53204c53,0x65646168,0x6f432072,0x6c69706d,0x36207265,
		0x392e332e,0x2e303036,0x38333631,0xabab0034,0x4e475349,0x000000a0,0x00000004,0x00000008,
		0x00000068,0x00000000,0x00000000,0x00000003,0x00000000,0x00000707,0x00000077,0x00000000,
		0x00000000,0x00000003,0x00000001,0x00000303,0x00000085,0x00000000,0x00000000,0x00000003,
		0x00000002,0x0000000f,0x00000090,0x00000000,0x00000000,0x00000003,0x00000003,0x00000707,
		0x616f6c66,0x6f505f74,0x69746973,0x68006e6f,0x5f666c61,0x43786554,0x64726f6f,0x74796200,
		0x6f435f65,0x00726f6c,0x616f6c66,0x6f4e5f74,0x6c616d72,0xababab00,0x4e47534f,0x00000080,
		0x00000004,0x00000008,0x00000068,0x00000000,0x00000001,0x00000003,0x00000000,0x0000000f,
		0x00000074,0x00000000,0x00000000,0x00000003,0x00000001,0x00000807,0x00000074,0x00000001,
		0x00000000,0x00000003,0x00000002,0x00000807,0x00000074,0x00000002,0x00000000,0x00000003,
		0x00000003,0x00000c03,0x505f5653,0x7469736f,0x006e6f69,0x43584554,0x44524f4f,0xababab00,
		0x52444853,0x00000244,0x00010040,0x00000091,0x04000059,0x00208e46,0x00000000,0x00000008,
		0x0300005f,0x00101072,0x00000000,0x0300005f,0x00101032,0x00000001,0x0300005f,0x00101072,
		0x00000003,0x04000067,0x001020f2,0x00000000,0x00000001,0x03000065,0x00102072,0x00000001,
		0x03000065,0x00102072,0x00000002,0x03000065,0x00102032,0x00000003,0x02000068,0x00000001,
		0x05000036,0x00100072,0x00000000,0x00101246,0x00000000,0x05000036,0x00100082,0x00000000,
		0x00004001,0x3f800000,0x08000011,0x00102012,0x00000000,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000004,0x08000011,0x00102022,0x00000000,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000005,0x08000011,0x00102042,0x00000000,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000006,0x08000011,0x00102082,0x00000000,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000007,0x08000011,0x00102012,0x00000001,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000000,0x08000011,0x00102022,0x00000001,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000001,0x08000011,0x00102042,0x00000001,0x00100e46,0x00000000,0x00208e46,
		0x00000000,0x00000002,0x08000010,0x00100012,0x00000000,0x00101246,0x00000003,0x00208246,
		0x00000000,0x00000000,0x08000010,0x00100022,0x00000000,0x00101246,0x00000003,0x00208246,
		0x00000000,0x00000001,0x08000010,0x00100042,0x00000000,0x00101246,0x00000003,0x00208246,
		0x00000000,0x00000002,0x07000010,0x00100082,0x00000000,0x00100246,0x00000000,0x00100246,
		0x00000000,0x05000044,0x00100082,0x00000000,0x0010003a,0x00000000,0x07000038,0x00102072,
		0x00000002,0x00100ff6,0x00000000,0x00100246,0x00000000,0x05000036,0x00102032,0x00000003,
		0x00101046,0x00000001,0x0100003e,0x54415453,0x00000074,0x00000011,0x00000001,0x00000000,
		0x00000007,0x0000000d,0x00000000,0x00000000,0x00000001,0x00000000,0x00000000,0x00000000,
		0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
		0x00000003,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
		0x00000000,0x00000000
	};

	//////////////////////////////////////////////////////////////////////
	// Data for Default_PS

	uint32 WEAKSYM Default_PS_Data[] =
	{
		0x43425844,0x5cc62dfc,0x5b8f73cf,0xb128b6de,0x0bc49144,0x00000001,0x00000670,0x00000005,
		0x00000034,0x00000220,0x000002a8,0x000002dc,0x000005f4,0x46454452,0x000001e4,0x00000002,
		0x000000c0,0x00000004,0x0000001c,0xffff0400,0x00008100,0x000001b1,0x0000009c,0x00000003,
		0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x000000a8,0x00000002,
		0x00000005,0x00000004,0xffffffff,0x00000000,0x00000001,0x0000000c,0x000000b3,0x00000000,
		0x00000000,0x00000000,0x00000000,0x00000003,0x00000001,0x00000001,0x000000ba,0x00000000,
		0x00000000,0x00000000,0x00000000,0x00000004,0x00000001,0x00000001,0x31786574,0x706d6153,
		0x0072656c,0x54636970,0x75747865,0x43006572,0x72656d61,0x694c0061,0x00746867,0x000000b3,
		0x00000001,0x000000f0,0x00000010,0x00000000,0x00000000,0x000000ba,0x00000004,0x00000124,
		0x00000040,0x00000000,0x00000000,0x00000108,0x00000000,0x0000000c,0x00000002,0x00000114,
		0x00000000,0x656d6163,0x6f506172,0xabab0073,0x00030001,0x00030001,0x00000000,0x00000000,
		0x00000184,0x00000000,0x0000000c,0x00000002,0x00000114,0x00000000,0x0000018d,0x00000010,
		0x0000000c,0x00000002,0x00000114,0x00000000,0x0000019a,0x00000020,0x0000000c,0x00000002,
		0x00000114,0x00000000,0x000001a7,0x00000030,0x0000000c,0x00000002,0x00000114,0x00000000,
		0x6867696c,0x736f5074,0x626d6100,0x746e6569,0x6f6c6f43,0x69640072,0x73756666,0x6c6f4365,
		0x7300726f,0x43636570,0x726f6c6f,0x63694d00,0x6f736f72,0x28207466,0x48202952,0x204c534c,
		0x64616853,0x43207265,0x69706d6f,0x2072656c,0x2e332e36,0x30303639,0x3336312e,0xab003438,
		0x4e475349,0x00000080,0x00000004,0x00000008,0x00000068,0x00000000,0x00000001,0x00000003,
		0x00000000,0x0000000f,0x00000074,0x00000000,0x00000000,0x00000003,0x00000001,0x00000707,
		0x00000074,0x00000001,0x00000000,0x00000003,0x00000002,0x00000707,0x00000074,0x00000002,
		0x00000000,0x00000003,0x00000003,0x00000303,0x505f5653,0x7469736f,0x006e6f69,0x43584554,
		0x44524f4f,0xababab00,0x4e47534f,0x0000002c,0x00000001,0x00000008,0x00000020,0x00000000,
		0x00000000,0x00000003,0x00000000,0x0000000f,0x545f5653,0x45475241,0xabab0054,0x52444853,
		0x00000310,0x00000040,0x000000c4,0x04000059,0x00208e46,0x00000003,0x00000001,0x04000059,
		0x00208e46,0x00000004,0x00000004,0x0300005a,0x00106000,0x00000000,0x04001858,0x00107000,
		0x00000000,0x00005555,0x03001062,0x00101072,0x00000001,0x03001062,0x00101072,0x00000002,
		0x03001062,0x00101032,0x00000003,0x03000065,0x001020f2,0x00000000,0x02000068,0x00000003,
		0x09000000,0x00100072,0x00000000,0x80101246,0x00000041,0x00000001,0x00208246,0x00000004,
		0x00000000,0x07000010,0x00100082,0x00000000,0x00100246,0x00000000,0x00100246,0x00000000,
		0x05000044,0x00100082,0x00000000,0x0010003a,0x00000000,0x07000038,0x00100072,0x00000000,
		0x00100ff6,0x00000000,0x00100246,0x00000000,0x09000000,0x00100072,0x00000001,0x80101246,
		0x00000041,0x00000001,0x00208246,0x00000003,0x00000000,0x07000010,0x00100082,0x00000000,
		0x00100246,0x00000001,0x00100246,0x00000001,0x05000044,0x00100082,0x00000000,0x0010003a,
		0x00000000,0x09000032,0x00100072,0x00000001,0x00100246,0x00000001,0x00100ff6,0x00000000,
		0x00100246,0x00000000,0x07000010,0x00100012,0x00000000,0x00100246,0x00000000,0x00101246,
		0x00000002,0x07000034,0x00100012,0x00000000,0x0010000a,0x00000000,0x00004001,0x00000000,
		0x0b000032,0x00100072,0x00000000,0x00208246,0x00000004,0x00000002,0x00100006,0x00000000,
		0x00208246,0x00000004,0x00000001,0x07000010,0x00100082,0x00000000,0x00100246,0x00000001,
		0x00100246,0x00000001,0x05000044,0x00100082,0x00000000,0x0010003a,0x00000000,0x07000038,
		0x00100072,0x00000001,0x00100ff6,0x00000000,0x00100246,0x00000001,0x07000010,0x00100082,
		0x00000000,0x00100246,0x00000001,0x00101246,0x00000002,0x07000034,0x00100082,0x00000000,
		0x0010003a,0x00000000,0x00004001,0x00000000,0x0500002f,0x00100082,0x00000000,0x0010003a,
		0x00000000,0x07000038,0x00100082,0x00000000,0x0010003a,0x00000000,0x00004001,0x433e0000,
		0x05000019,0x00100082,0x00000000,0x0010003a,0x00000000,0x08000038,0x00100072,0x00000001,
		0x00100ff6,0x00000000,0x00208246,0x00000004,0x00000003,0x09000045,0x001000f2,0x00000002,
		0x00101046,0x00000003,0x00107e46,0x00000000,0x00106000,0x00000000,0x09000032,0x00102072,
		0x00000000,0x00100246,0x00000000,0x00100246,0x00000002,0x00100246,0x00000001,0x05000036,
		0x00102082,0x00000000,0x0010003a,0x00000002,0x0100003e,0x54415453,0x00000074,0x00000018,
		0x00000003,0x00000000,0x00000004,0x00000015,0x00000000,0x00000000,0x00000001,0x00000000,
		0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x00000000,
		0x00000000,0x00000000,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
		0x00000000,0x00000000,0x00000000,0x00000000
	};

	//////////////////////////////////////////////////////////////////////
	// offsets and defaults

	//////////////////////////////////////////////////////////////////////
	// VertConstants offsets

	extern ConstBufferOffset const WEAKSYM Default_VS_VertConstants_Offsets[2] =
	{
		{ "ModelMatrix", 0 },
		{ "TransformMatrix", 64 }
	};

	// no defaults for VertConstants

	//////////////////////////////////////////////////////////////////////
	// const buffer names table

	extern char const WEAKSYM *Default_VS_ConstBufferNames[] =
	{
		"VertConstants"
	};

	//////////////////////////////////////////////////////////////////////
	// offsets and defaults

	//////////////////////////////////////////////////////////////////////
	// Camera offsets

	extern ConstBufferOffset const WEAKSYM Default_PS_Camera_Offsets[1] =
	{
		{ "cameraPos", 0 }
	};

	// no defaults for Camera

	//////////////////////////////////////////////////////////////////////
	// Light offsets

	extern ConstBufferOffset const WEAKSYM Default_PS_Light_Offsets[4] =
	{
		{ "lightPos", 0 },
		{ "ambientColor", 16 },
		{ "diffuseColor", 32 },
		{ "specColor", 48 }
	};

	// no defaults for Light

	//////////////////////////////////////////////////////////////////////
	// const buffer names table

	extern char const WEAKSYM *Default_PS_ConstBufferNames[] =
	{
		"Camera",
		"Light"
	};

	//////////////////////////////////////////////////////////////////////
	// Sampler names

	extern char const WEAKSYM * Default_PS_SamplerNames[] =
	{
		"tex1Sampler"
	};

	//////////////////////////////////////////////////////////////////////
	// Texture names

	extern char const WEAKSYM * Default_PS_TextureNames[] =
	{
		"picTexture"
	};

	//////////////////////////////////////////////////////////////////////
	// Input Element descs

	extern D3D11_INPUT_ELEMENT_DESC const WEAKSYM Default_VS_InputElements[4] =
	{
		{ "float_Position", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA, 0 },
		{ "half_TexCoord", 0, DXGI_FORMAT_R16G16_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA, 0 },
		{ "byte_Color", 0, DXGI_FORMAT_R8G8B8A8_UNORM, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA, 0 },
		{ "float_Normal", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA, 0 }
	};

	//////////////////////////////////////////////////////////////////////
	// Binding runs

	extern Shader::BindingState WEAKSYM Default_Bindings[] = {
		{{}, {}, {{{0,1}}}},
		{},
		{},
		{},
		{{{{0,1}}}, {{{0,1}}}, {{{3,2}}}},
		{}
	};

	//////////////////////////////////////////////////////////////////////
	// Shader struct

	struct Default : ShaderState
	{
		//////////////////////////////////////////////////////////////////////
		// InputVertex

		struct InputVertex
		{
			Float3 Position;
			Half2 TexCoord;
			Byte4 Color;
			Float3 Normal;
		};

		using VertBuffer = VertexBuffer<InputVertex>;

		//////////////////////////////////////////////////////////////////////
		// Vertex Shader

		struct VS : VertexShader
		{
			// Const Buffers

			struct VertConstants_t
			{
				Float4x4 ModelMatrix;
				Float4x4 TransformMatrix;
			};

			ConstBuffer<VertConstants_t> VertConstants;
			enum { VertConstants_index = 0 };

			// Constructor

			VS()
				: VertexShader(1, Default_VS_ConstBufferNames, 0, null, 0, null, null, null, Default_Bindings[ShaderType::Vertex])
				, VertConstants(2, Default_VS_VertConstants_Offsets, null, this, 0, 0)
			{
			}
		};

		//////////////////////////////////////////////////////////////////////
		// Pixel Shader

		struct PS : PixelShader
		{
			// Const Buffers

			struct Camera_t
			{
				Float3 cameraPos;				private: byte pad0[4]; public:
			};

			ConstBuffer<Camera_t> Camera;
			enum { Camera_index = 0 };

			struct Light_t
			{
				Float3 lightPos;				private: byte pad0[4]; public:
				Float3 ambientColor;				private: byte pad1[4]; public:
				Float3 diffuseColor;				private: byte pad2[4]; public:
				Float3 specColor;				private: byte pad3[4]; public:
			};

			ConstBuffer<Light_t> Light;
			enum { Light_index = 1 };

			// Samplers

			union
			{
				struct
				{
					Sampler *tex1Sampler;
				};
				Sampler *samplers[1];
			};

			// Textures

			union
			{
				struct
				{
					Texture *picTexture;
				};
				Texture *textures[1];
			};

			// Constructor

			PS()
				: PixelShader(2, Default_PS_ConstBufferNames, 1, Default_PS_SamplerNames, 1, Default_PS_TextureNames, textures, samplers, Default_Bindings[ShaderType::Pixel])
				, tex1Sampler(null)
				, picTexture(null)
				, Camera(1, Default_PS_Camera_Offsets, null, this, 0, 3)
				, Light(4, Default_PS_Light_Offsets, null, this, 1, 4)
			{
			}
		};

		//////////////////////////////////////////////////////////////////////
		// Members

		VS vs;
		PS ps;

		//////////////////////////////////////////////////////////////////////
		// Constructor

		Default(): ShaderState(Default_BlendDesc, Default_DepthStencilDesc, Default_RasterizerDesc)
		{
			vs.Create(Default_VS_Data, 1320, Default_VS_InputElements, _countof(Default_VS_InputElements));
			ps.Create(Default_PS_Data, 1648);
			Shaders[Vertex] = &vs;
			Shaders[Hull] = null;
			Shaders[Domain] = null;
			Shaders[Geometry] = null;
			Shaders[Pixel] = &ps;
			Shaders[Compute] = null;
		}

		//////////////////////////////////////////////////////////////////////
		// Activate

		void Activate(ID3D11DeviceContext *context)
		{
			ShaderState::SetState(context);
			vs.Activate(context);
			context->HSSetShader(null, null, 0);
			context->DSSetShader(null, null, 0);
			context->GSSetShader(null, null, 0);
			ps.Activate(context);
			context->CSSetShader(null, null, 0);
		}

		void Activate_V(ID3D11DeviceContext *context) override
		{
			Activate(context);
		}
	};
}

#pragma pack(pop)
